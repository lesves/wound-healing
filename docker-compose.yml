services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db-data:/var/lib/postgresql/data/
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
      start_period: 15s
      timeout: 10s
  web:
    build: .
    command: sh -c "python3 manage.py migrate && gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers ${NUM_WORKERS:-1}"
    expose:
      - 8000
    volumes:
      - static:/app/backend/static
      - data:/app/backend/data
      - .env:/app/.env
    restart: always
    depends_on:
      db:
        condition: service_healthy
        restart: true
  nginx:
    build: ./nginx
    volumes:
      - static:/app/backend/static/
      - data:/app/backend/data/
    ports:
      - 80:80
    restart: always
    depends_on:
      - web

volumes:
  db-data:
  data:
  static:
